{"version":3,"sources":["Redux/Contacts/Contacts.Reducer.js","Redux/RootReducer.js","Redux/store.js","Redux/Contacts/Contacts.type.js","views/Add/AddForm.jsx","Redux/Contacts/Contacts.Action.js","Components/Search/Search.jsx","Components/Edit/EditForm.jsx","Components/Contacts/Tr.js","Components/Table/Table.js","views/Wellcome/Wellcome.jsx","views/PhoneBookList/PhoneBookList.jsx","views/EditContact/EditContact.jsx","App.js","serviceWorker.js","index.js"],"names":["initialState","contacts_list","id","name","lastName","phone","email","action","edit_obj","ContactsReducer","state","type","payload","filter","contact","map","combineReducers","contacts","middlewares","logger","persistConfig","key","storage","whitelist","persistedReducer","persistReducer","RootReducer","store","createStore","applyMiddleware","persistor","persistStore","connect","addContact","types","history","useHistory","useState","newObj","setNewObj","add","setAdd","errors","validEmailRegex","RegExp","validPhoneRegex","handleChange","event","target","value","trim","length","test","handleClear","Card","className","CardHeader","CardBody","onSubmit","preventDefault","obj","reduce","initial","item","Math","max","handleAdd","push","htmlFor","placeholder","onChange","Button","variant","onClick","Search","search","chengeHandler","style","color","to","editContact","setContacts","show","editObj","setEditObj","handleCloseEdit","errorsEdit","edit","setEdit","Modal","onHide","Header","Title","Body","Footer","Tr","deleteContact","deleteModal","setDeleteModal","toggleDelete","setShow","handleEdit","trContact","isOpen","toggle","ModalHeader","ModalBody","ModalFooter","setSearch","newTr","toLowerCase","startsWith","e","Wellcome","height","PhoneBookList","EditContact","App","loading","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gZAAMA,EAAe,CACjBC,cAAe,CACX,CAAEC,GAAI,EAAGC,KAAM,OAAQC,SAAU,UAAWC,MAAO,cAAeC,MAAO,oBAAqBC,OAAQ,IACtG,CAAEL,GAAI,EAAGC,KAAM,OAAQC,SAAU,SAAUC,MAAO,cAAeC,MAAO,iBAAkBC,OAAQ,KAMtGC,SAAU,CACNL,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,KA2BAG,EAvBS,WAAmC,IAAlCC,EAAiC,uDAAzBV,EAAcO,EAAW,uCAC9CI,EAAkBJ,EAAlBI,KAAMC,EAAYL,EAAZK,QAEd,OAAQD,GACJ,IAAK,eACD,OAAO,eACAD,EADP,CAEIT,cAAc,GAAD,mBAAMS,EAAMT,eAAZ,CAA2BW,MAEhD,IAAK,kBACD,OAAO,eACAF,EADP,CAEIT,cAAeS,EAAMT,cAAcY,QAAO,SAAAC,GAAO,OAAIA,EAAQZ,KAAOU,OAE5E,IAAK,gBACD,OAAO,eACAF,EADP,CAEIT,cAAeS,EAAMT,cAAcc,KAAI,SAAAD,GAAO,OAAIA,EAAQZ,KAAOU,EAAQV,GAAKU,EAAUE,OAEhG,QACI,OAAOJ,IClCJM,cAAgB,CAC3BC,SAAUR,ICGRS,EAAc,CAACC,KACfC,EAAgB,CAClBC,IAAK,OACLC,YACAC,UAAW,CAAC,aAGVC,EAAmBC,YAAeL,EAAeM,GAEjDC,EAAQC,YACVJ,EACAK,IAAe,WAAf,EAAmBX,IAERS,IAEFG,EAAYC,YAAaJ,G,8ECpBvB,EACG,eADH,EAEM,kBAFN,EAGI,gBC6HnB,IAKeK,eALS,SAACtB,GACrB,MAAO,CACHO,SAAUP,EAAMO,SAAShB,iBAGO,CAAEgC,WCpIhB,SAACnB,GACvB,MAAO,CACHH,KAAMuB,EACNtB,QAASE,KDiIFkB,EA7Hf,YAA4C,IAAzBf,EAAwB,EAAxBA,SAAUgB,EAAc,EAAdA,WACrBE,EAAUC,cADyB,EAEXC,mBAAS,CACjClC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,KAN4B,mBAEhCgC,EAFgC,KAExBC,EAFwB,OAQjBF,oBAAS,GARQ,mBAQhCG,EARgC,KAQ3BC,EAR2B,OASXJ,mBAAS,CACjClC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,KAb4B,mBAShCoC,EATgC,KAgBjCC,GAhBiC,KAgBfC,OAAO,2HACzBC,EAAkBD,OAAO,iDAEzBE,EAAe,SAACC,GAAW,IAAD,EACJA,EAAMC,OAAtB7C,EADoB,EACpBA,KAAM8C,EADc,EACdA,MAKd,OAHAV,EAAU,eAAKD,EAAN,eAAenC,EAAO8C,KAC/BR,GAAO,GAECtC,GACJ,IAAK,OACG8C,EAAMC,OAAOC,OAAS,GACtBV,GAAO,GACPC,EAAOvC,KAAO,mDACXuC,EAAOvC,KAAO,GACrB,MACJ,IAAK,WACG8C,EAAMC,OAAOC,OAAS,GACtBV,GAAO,GACPC,EAAOtC,SAAW,mDACfsC,EAAOtC,SAAW,GACzB,MACJ,IAAK,QACIyC,EAAgBO,KAAKH,GAGnBP,EAAOrC,MAAQ,IAFlBoC,GAAO,GACPC,EAAOrC,MAAQ,uBAEnB,MACJ,IAAK,QACIsC,EAAgBS,KAAKH,GAGnBP,EAAOpC,MAAQ,IAFlBmC,GAAO,GACPC,EAAOpC,MAAQ,yBAezB+C,EAAc,WAChBd,EAAU,CACNpC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,MAiBf,OAEI,kBAACgD,EAAA,EAAD,CAAMC,UAAU,iCACZ,kBAACC,EAAA,EAAD,oBACA,kBAACC,EAAA,EAAD,CAAUF,UAAU,iBAChB,0BAAMG,SAlBG,SAACX,GAClBA,EAAMY,iBAEK,GAAPnB,IACmB,IAAfF,EAAOnC,MAAiC,IAAnBmC,EAAOlC,UAAkC,IAAhBkC,EAAOjC,OAA+B,IAAhBiC,EAAOhC,SArBrE,SAACsD,GACf,IAAI1D,EAAKe,EAAS4C,QAAO,SAACC,EAASC,GAAV,OAAmB,EAAIC,KAAKC,IAAIF,EAAK7D,MAAK,GACzD,GAANA,IACAA,EAAK,GAET+B,EAAW,eAAK2B,EAAN,CAAW1D,QAiBbgE,CAAU5B,GACVe,KAEJlB,EAAQgC,KAAK,sBAUqBZ,UAAU,sBAEpC,2BAAOa,QAAQ,OAAOb,UAAU,aAAhC,SACA,2BAAO5C,KAAK,OAAO0D,YAAY,aAAalE,KAAK,OAAO8C,MAAOX,EAAOnC,KAAMmE,SAAUxB,EAAcS,UAAU,mBAC7G,0BAAMA,UAAU,SAASb,EAAOvC,MAEjC,2BAAOiE,QAAQ,UAAUb,UAAU,aAAnC,YACA,2BAAO5C,KAAK,OAAO0D,YAAY,iBAAiBlE,KAAK,WAAW8C,MAAOX,EAAOlC,SAAUkE,SAAUxB,EAAcS,UAAU,mBACzH,0BAAMA,UAAU,SAASb,EAAOtC,UAEjC,2BAAOgE,QAAQ,QAAQb,UAAU,aAAjC,UACA,2BAAO5C,KAAK,QAAQ0D,YAAY,cAAclE,KAAK,QAAQ8C,MAAOX,EAAOjC,MAAOiE,SAAUxB,EAAcS,UAAU,mBACjH,0BAAMA,UAAU,SAASb,EAAOrC,OAEjC,2BAAO+D,QAAQ,QAAQb,UAAU,aAAjC,UACA,2BAAO5C,KAAK,QAAQ0D,YAAY,cAAclE,KAAK,QAAQ8C,MAAOX,EAAOhC,MAAOgE,SAAUxB,EAAcS,UAAU,mBACjH,0BAAMA,UAAU,SAASb,EAAOpC,OAEjC,yBAAKiD,UAAU,kCACX,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,YAAY7D,KAAK,QAAQ8D,QAASpB,EAAaE,UAAU,eAAzE,SAGA,kBAACgB,EAAA,EAAD,CAAQC,QAAQ,UAAU7D,KAAK,SAAS4C,UAAU,UAAlD,eEtGTmB,MAff,YAA4C,IAA1BC,EAAyB,EAAzBA,OAAQC,EAAiB,EAAjBA,cAEtB,OACI,yBAAKrB,UAAU,qCACX,yBAAKA,UAAU,oHACX,2BAAOA,UAAU,6CAA6CpD,KAAM,SAAUmE,SAAUM,EAAe3B,MAAO0B,EAAQN,YAAY,mBAClI,uBAAGd,UAAU,mBAAmBsB,MAAO,CAAEC,MAAO,YAEpD,kBAAC,IAAD,CAAMC,GAAI,gCACN,4BAAQxB,UAAU,qBAAqB,uBAAGA,UAAU,mB,cC2HpE,IAKevB,eALS,SAACtB,GACrB,MAAO,CACHO,SAAUP,EAAMO,SAAShB,iBAGO,CAAE+E,YF5Hf,SAAClE,GACxB,MAAO,CACHH,KAAMuB,EACNtB,QAASE,KEyHFkB,EA9Hf,YAAsG,EAAlFf,SAAkF,EAAxEgE,YAAyE,IAA5DC,EAA2D,EAA3DA,KAAMC,EAAqD,EAArDA,QAASC,EAA4C,EAA5CA,WAAYC,EAAgC,EAAhCA,gBAAiBL,EAAe,EAAfA,YAC7E7C,EAAUC,cADkF,EAE9DC,mBAAS,CACzClC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,KANuF,mBAE3FgF,EAF2F,aAS1EjD,oBAAS,IATiE,mBAS3FkD,EAT2F,KASrFC,EATqF,KAY5F7C,EAAkBC,OAAO,0HACzBC,EAAkBD,OAAO,iDAEzBE,EAAe,SAACC,GAAW,IAAD,EACJA,EAAMC,OAAtB7C,EADoB,EACpBA,KAAM8C,EADc,EACdA,MAKd,OAJAmC,EAAW,eAAKD,EAAN,eAAgBhF,EAAO8C,KAEjCuC,GAAQ,GAEArF,GACJ,IAAK,OACG8C,EAAMC,OAAOC,OAAS,GACtBqC,GAAQ,GACRF,EAAWnF,KAAO,mDACfmF,EAAWnF,KAAO,GACzB,MACJ,IAAK,WACG8C,EAAMC,OAAOC,OAAS,GACtBqC,GAAQ,GACRF,EAAWlF,SAAW,mDACnBkF,EAAWlF,SAAW,GAC7B,MACJ,IAAK,QACIyC,EAAgBO,KAAKH,GAGnBqC,EAAWjF,MAAQ,IAFtBmF,GAAQ,GACRF,EAAWjF,MAAQ,uBAEvB,MACJ,IAAK,QACIsC,EAAgBS,KAAKH,GAGnBqC,EAAWhF,MAAQ,IAFtBkF,GAAQ,GACRF,EAAWhF,MAAQ,yBAiCnC,OACI,oCACI,kBAACmF,EAAA,EAAD,CAAOP,KAAMA,EAAMQ,OAAQL,GACvB,kBAACI,EAAA,EAAME,OAAP,KACI,kBAACF,EAAA,EAAMG,MAAP,sBAEJ,kBAACH,EAAA,EAAMI,KAAP,KACI,0BAAMnC,SAxBD,SAACX,GAClBA,EAAMY,iBACE,GAAR4B,GAAgBP,EAAYG,IAAYE,IAYxClD,EAAQgC,KAAK,qBAU6BZ,UAAU,sBAEpC,2BAAOa,QAAQ,OAAOb,UAAU,aAAhC,SACA,2BAAO5C,KAAK,OAAO0D,YAAY,aAAalE,KAAK,OAAO8C,MAAOkC,EAAQhF,KAAMmE,SAAUxB,EAAcS,UAAU,mBAC9G,0BAAMA,UAAU,SAAS+B,EAAWnF,MAErC,2BAAOiE,QAAQ,UAAUb,UAAU,aAAnC,YACA,2BAAO5C,KAAK,OAAO0D,YAAY,iBAAiBlE,KAAK,WAAW8C,MAAOkC,EAAQ/E,SAAUkE,SAAUxB,EAAcS,UAAU,mBAC1H,0BAAMA,UAAU,SAAS+B,EAAWlF,UAErC,2BAAOgE,QAAQ,QAAQb,UAAU,aAAjC,UACA,2BAAO5C,KAAK,QAAQ0D,YAAY,cAAclE,KAAK,QAAQ8C,MAAOkC,EAAQ9E,MAAOiE,SAAUxB,EAAcS,UAAU,mBAClH,0BAAMA,UAAU,SAAS+B,EAAWjF,OAErC,2BAAO+D,QAAQ,QAAQb,UAAU,aAAjC,UACA,2BAAO5C,KAAK,QAAQ0D,YAAY,cAAclE,KAAK,QAAQ8C,MAAOkC,EAAQ7E,MAAOgE,SAAUxB,EAAcS,UAAU,mBAClH,0BAAMA,UAAU,SAAS+B,EAAWhF,OAErC,kBAACmF,EAAA,EAAMK,OAAP,KACI,kBAAC,IAAD,CAAMf,GAAG,oBACL,kBAACR,EAAA,EAAD,CAAQC,QAAQ,SAASC,QAASY,GAAlC,UAIJ,kBAACd,EAAA,EAAD,CAAQC,QAAQ,YAAY7D,KAAK,QAAQ8D,QAxD7C,WAChBW,EAAW,CACPjF,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,OAmDS,SAGA,kBAACiE,EAAA,EAAD,CAAQC,QAAQ,UAAU7D,KAAK,UAA/B,gB,wCCnDboF,MApEf,YAA6D,IAA/C9E,EAA8C,EAA9CA,SAAUgE,EAAoC,EAApCA,YAAalB,EAAuB,EAAvBA,KAAMiC,EAAiB,EAAjBA,cAAiB,EAElB3D,oBAAS,GAFS,mBAEjD4D,EAFiD,KAEpCC,EAFoC,KAGlDC,EAAe,kBAAMD,GAAgBD,IAHa,EAKhC5D,oBAAS,GALuB,mBAKjD6C,EALiD,KAK3CkB,EAL2C,OAM1B/D,mBAAS,CACnClC,KAAM,GACNC,SAAU,GACVC,MAAO,GACPC,MAAO,KAV6C,mBAMjD6E,EANiD,KAMxCC,EANwC,KAuBlDiB,EAAa,SAACnG,GAChB,IAAMoG,EAAYrF,EAASJ,QAAO,SAACC,GAAD,OAAaA,EAAQZ,IAAMA,KAC7DkF,EAAWkB,EAAU,KAGzB,OACI,oCACI,wBAAI/C,UAAU,MACV,4BAAKQ,EAAK7D,IACV,4BAAK6D,EAAK5D,MACV,4BAAK4D,EAAK3D,UACV,4BAAK2D,EAAK1D,OACV,4BAAK0D,EAAKzD,OACV,4BACI,kBAAC,IAAD,CAAOiG,OAAQN,EAAaO,OAAQL,GAChC,kBAACM,EAAA,EAAD,CAAalD,UAAU,aAAaiD,OAAQL,GAA5C,kBACA,kBAACO,EAAA,EAAD,6CAGA,kBAACC,EAAA,EAAD,KACI,kBAAC,IAAD,CAAQ7B,MAAM,SAASL,QAAS,kBA/BlCvE,EA+BqD6D,EAAK7D,QA7B5E8F,EAAc9F,GAFG,IAACA,IA+BE,UAA6E,IAC7E,kBAAC,IAAD,CAAQ4E,MAAM,YAAYL,QAAS0B,GAAnC,YAGR,4BAAQ1B,QAAS0B,EAAc5C,UAAU,uBAAsB,uBAAGA,UAAU,iBAC5E,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAMwB,GAAG,iCACL,4BAAQN,QAAS,kBAAqBV,EAAK7D,GA9B/DkG,GAAQ,QACRC,EAAWtC,EAAK7D,KA6BoDqD,UAAU,wBAAuB,uBAAGA,UAAU,kBAItG,kBAAC,EAAD,CACItC,SAAUA,EACVgE,YAAaA,EACbC,KAAMA,EACNG,gBAzCI,kBAAMe,GAAQ,IA0ClBjB,QAASA,EACTC,WAAYA,Q,MCHpC,IAKepD,eALS,SAACtB,GACrB,MAAO,CACHO,SAAUP,EAAMO,SAAShB,iBAGO,CAAE+F,cJ1Db,SAAC9F,GAC1B,MAAO,CACHS,KAAMuB,EACNtB,QAASV,KIuDF8B,EA1Df,YAAyD,IAAxCf,EAAuC,EAAvCA,SAAU+E,EAA6B,EAA7BA,cAA6B,KAAd/D,WAaVI,mBAAS,KAbe,mBAa7CsC,EAb6C,KAarCiC,EAbqC,KAmBhDC,EAAQ5F,EAASJ,QAAO,SAAAkD,GAAI,OAC5BA,EAAK5D,KAAK2G,cAAcC,WAAWpC,EAAOmC,gBAC1C/C,EAAK1D,MAAM0G,WAAWpC,MAG1B,OACI,oCACI,yBAAKpB,UAAU,mBACX,kBAAC,EAAD,CAAQoB,OAAQA,EAAQiC,UAAWA,EAAWhC,cAZpC,SAACoC,GACnBJ,EAAUI,EAAEhE,OAAOC,UAYX,yBAAKM,UAAU,kCACX,2BAAOA,UAAU,iDACb,2BAAOA,UAAU,cACb,4BACI,iCACA,oCACA,yCACA,qCACA,qCACA,wCAGR,+BACKsD,EAAM9F,KAAI,SAACgD,GAAD,OACP,kBAAC,EAAD,CAAI1C,IAAK0C,EAAK7D,GAAI6D,KAAMA,EAAM9C,SAAUA,EAAU+E,cAAeA,eCtBlFiB,MApBf,WAAqB,IAAD,EACQ5E,oBAAS,GADjB,mBACT6C,EADS,KACHkB,EADG,KAIhB,OACI,6BAEQlB,EACI,yBAAK3B,UAAU,mDAAmDsB,MAAO,CAAEqC,OAAQ,UAC/E,kBAAC,IAAD,CAAMnC,GAAG,oBACL,4BAAQN,QAAS,kBARhB2B,GAAQ,IAQ4B7C,UAAU,gBAA/C,+BAIR,kBAAC,EAAD,QCdL4D,MANf,WACI,OACI,kBAAC,EAAD,OCIOC,MANf,WACI,OACI,kBAAC,EAAD,OC+BOC,MAtBf,WAEE,OACE,kBAAC,IAAD,CAAU1F,MAAOA,GACf,kBAAC,IAAD,CAAa2F,QAAS,KAAMxF,UAAWA,GACrC,yBAAKyB,UAAU,OACb,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOgE,OAAK,EAACC,KAAK,gCAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,gCAAgCC,UAAWL,IAC7D,kBAAC,IAAD,CAAOG,OAAK,EAACC,KAAK,mBAAmBC,UAAWN,IAChD,kBAAC,IAAD,CAAOK,KAAK,IAAIC,UAAWR,UChBrBS,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1f62262a.chunk.js","sourcesContent":["const initialState = {\r\n    contacts_list: [\r\n        { id: 1, name: \"amir\", lastName: \"sharifi\", phone: \"09354356218\", email: \"sharifi@gmail.com\", action: \"\" },\r\n        { id: 2, name: \"reza\", lastName: \"hatami\", phone: \"09124356218\", email: \"reza@gmail.com\", action: \"\" },\r\n        // { id: 4, name: \"mahdi\", lastName: \"sadeghi\", phone: \"09134356218\", email: \"sadeghi@gmail.com\", action: \"\" },\r\n        // { id: 5, name: \"hasan\", lastName: \"mohammadi\", phone: \"09224356218\", email: \"hasan@gmail.com\", action: \"\" },\r\n        // { id: 7, name: \"amirali\", lastName: \"ansari\", phone: \"09356356218\", email: \"ansari@gmail.com\", action: \"\" },\r\n        // { id: 8, name: \"mehran\", lastName: \"mansoori\", phone: \"09164356218\", email: \"mehran@gmail.com\", action: \"\" },\r\n    ],\r\n    edit_obj: {\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    }\r\n}\r\n\r\nconst ContactsReducer = (state = initialState, action) => {\r\n    const { type, payload } = action;\r\n\r\n    switch (type) {\r\n        case \"ADD_CONTACTS\":\r\n            return {\r\n                ...state,\r\n                contacts_list: [...state.contacts_list, payload]\r\n            }\r\n        case \"DELETE_CONTACTS\":\r\n            return {\r\n                ...state,\r\n                contacts_list: state.contacts_list.filter(contact => contact.id !== payload)\r\n            }\r\n        case \"EDIT_CONTACTS\":\r\n            return {\r\n                ...state,\r\n                contacts_list: state.contacts_list.map(contact => contact.id === payload.id ? payload : contact),\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default ContactsReducer\r\n","import {combineReducers} from 'redux';\r\nimport ContactsReducer from './Contacts/Contacts.Reducer';\r\n\r\nexport default combineReducers({\r\n    contacts: ContactsReducer,\r\n})","import { applyMiddleware, createStore } from 'redux';\r\nimport { persistStore, persistReducer } from 'redux-persist'\r\nimport storage from 'redux-persist/lib/storage'\r\nimport logger from 'redux-logger';\r\n\r\nimport RootReducer from './RootReducer';\r\n\r\nconst middlewares = [logger];\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage,\r\n    whitelist: [\"contacts\"]\r\n}\r\n\r\nconst persistedReducer = persistReducer(persistConfig, RootReducer)\r\n\r\nconst store = createStore(\r\n    persistedReducer,\r\n    applyMiddleware(...middlewares)\r\n)\r\nexport default store;\r\n\r\nexport const persistor = persistStore(store)","\r\n\r\nexport default {\r\n    ADD_CONTACTS: \"ADD_CONTACTS\",\r\n    DELETE_CONTACTS: \"DELETE_CONTACTS\",\r\n    EDIT_CONTACTS: \"EDIT_CONTACTS\",\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Card, CardBody, CardHeader } from 'reactstrap';\r\nimport { connect } from 'react-redux';\r\nimport { addContact } from '../../Redux/Contacts/Contacts.Action';\r\n\r\n\r\nfunction AddForm({ contacts, addContact }) {\r\n    let history = useHistory();\r\n    const [newObj, setNewObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    })\r\n    const [add, setAdd] = useState(true);\r\n    const [errors, setErrors] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n    });\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n\r\n        setNewObj({ ...newObj, [name]: value });\r\n        setAdd(true);\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                if (value.trim().length < 1) {\r\n                    setAdd(false);\r\n                    errors.name = \"Name must be 1 characters (without space) long!\";\r\n                } else errors.name = \"\"\r\n                break;\r\n            case \"lastName\":\r\n                if (value.trim().length < 1) {\r\n                    setAdd(false);\r\n                    errors.lastName = \"Name must be 1 characters (without space) long!\";\r\n                } else errors.lastName = \"\"\r\n                break;\r\n            case \"phone\":\r\n                if (!validPhoneRegex.test(value)) {\r\n                    setAdd(false);\r\n                    errors.phone = \"Phone is not valid!\";\r\n                } else errors.phone = \"\"\r\n                break;\r\n            case \"email\":\r\n                if (!validEmailRegex.test(value)) {\r\n                    setAdd(false);\r\n                    errors.email = \"Email is not valid!\";\r\n                } else errors.email = \"\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    const handleAdd = (obj) => {\r\n        let id = contacts.reduce((initial, item) => 1 + Math.max(item.id), 0);\r\n        if (id == 0) {\r\n            id = 1;\r\n        }\r\n        addContact({ ...obj, id })\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setNewObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (add == true) {\r\n            if (newObj.name != \"\" && newObj.lastName != \"\" && newObj.phone != \"\" && newObj.email != \"\") {\r\n                handleAdd(newObj);\r\n                handleClear();\r\n            }\r\n            history.push('/phone-book-list');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n\r\n        <Card className=\"mx-1 mx-sm-5 bg-info add-form\">\r\n            <CardHeader>Add contact</CardHeader>\r\n            <CardBody className=\"px-5 cardBody\">\r\n                <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                    <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                    <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={newObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                    {<span className=\"error\">{errors.name}</span>}\r\n\r\n                    <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                    <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={newObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                    {<span className=\"error\">{errors.lastName}</span>}\r\n\r\n                    <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                    <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={newObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                    {<span className=\"error\">{errors.phone}</span>}\r\n\r\n                    <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                    <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={newObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                    {<span className=\"error\">{errors.email}</span>}\r\n\r\n                    <div className=\"row justify-content-center m-3\">\r\n                        <Button variant=\"secondary\" type=\"reset\" onClick={handleClear} className=\"border mx-2\">\r\n                            Clear\r\n                        </Button>\r\n                        <Button variant=\"success\" type=\"submit\" className=\"border\">\r\n                            Save\r\n                        </Button>\r\n                    </div>\r\n                </form>\r\n            </CardBody>\r\n        </Card>\r\n    );\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts.contacts_list,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { addContact })(AddForm);","import types from './Contacts.type';\r\n\r\n\r\nexport const addContact = (contact) => {\r\n    return {\r\n        type: types.ADD_CONTACTS,\r\n        payload: contact\r\n    }\r\n}\r\n\r\nexport const deleteContact = (id) => {\r\n    return {\r\n        type: types.DELETE_CONTACTS,\r\n        payload: id\r\n    }\r\n}\r\n\r\nexport const editContact = (contact) => {\r\n    return {\r\n        type: types.EDIT_CONTACTS,\r\n        payload: contact,\r\n    }\r\n}\r\n","import React from 'react';\r\nimport AddForm from '../../views/Add/AddForm';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\n\r\nfunction Search({ search, chengeHandler }) {\r\n\r\n    return (\r\n        <div className=\"col-12 row justify-content-around\">\r\n            <div className=\"col-10 col-md-8 col-lg-6 mx-auto row align-items-center justify-content-center bg-info rounded-lg py-2 my-2 ml-5\">\r\n                <input className=\"rounded border-0  col-12 col-sm-8 col-lg-6\" name={'search'} onChange={chengeHandler} value={search} placeholder=\"search contact\" />\r\n                <i className='fa fa-search m-1' style={{ color: \"white\" }} />\r\n            </div>\r\n            <Link to={\"/phone-book-list/add-contact\"}>\r\n                <button className=\"btn btn-info my-3\" ><i className='fa fa-plus' /></button>\r\n            </Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Search;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Modal from 'react-bootstrap/Modal';\r\nimport ModalDialog from 'react-bootstrap/ModalDialog';\r\nimport ModalHeader from 'react-bootstrap/ModalHeader';\r\nimport ModalTitle from 'react-bootstrap/ModalTitle';\r\nimport ModalBody from 'react-bootstrap/ModalBody';\r\nimport ModalFooter from 'react-bootstrap/ModalFooter';\r\nimport Button from 'react-bootstrap/Button';\r\nimport { propTypes } from \"react-bootstrap/esm/Image\";\r\nimport './validationSpan.css'\r\nimport { useHistory, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux';\r\nimport { editContact } from '../../Redux/Contacts/Contacts.Action';\r\n\r\n\r\nfunction EditForm({ contacts, setContacts, show, editObj, setEditObj, handleCloseEdit, editContact }) {\r\n    const history = useHistory();\r\n    const [errorsEdit, setErrorsEdit] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\",\r\n\r\n    });\r\n    const [edit, setEdit] = useState(true);\r\n\r\n\r\n    const validEmailRegex = RegExp(/^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i);\r\n    const validPhoneRegex = RegExp(/^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-\\s\\./0-9]*$/g);\r\n\r\n    const handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        setEditObj({ ...editObj, [name]: value });\r\n\r\n        setEdit(true);\r\n\r\n        switch (name) {\r\n            case \"name\":\r\n                if (value.trim().length < 1) {\r\n                    setEdit(false);\r\n                    errorsEdit.name = \"Name must be 1 characters (without space) long!\";\r\n                } else errorsEdit.name = \"\"\r\n                break;\r\n            case \"lastName\":\r\n                if (value.trim().length < 1) {\r\n                    setEdit(false);\r\n                    errorsEdit.lastName = \"Name must be 1 characters (without space) long!\";\r\n                } else errorsEdit.lastName = \"\"\r\n                break;\r\n            case \"phone\":\r\n                if (!validPhoneRegex.test(value)) {\r\n                    setEdit(false);\r\n                    errorsEdit.phone = \"Phone is not valid!\";\r\n                } else errorsEdit.phone = \"\"\r\n                break;\r\n            case \"email\":\r\n                if (!validEmailRegex.test(value)) {\r\n                    setEdit(false);\r\n                    errorsEdit.email = \"Email is not valid!\";\r\n                } else errorsEdit.email = \"\"\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const handleClear = () => {\r\n        setEditObj({\r\n            name: \"\",\r\n            lastName: \"\",\r\n            phone: \"\",\r\n            email: \"\",\r\n        })\r\n    }\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        edit == true && editContact(editObj) && handleCloseEdit();\r\n        // setContacts([...contacts.map((item) => {\r\n        //     if ((item.id == editObj.id) && (edit == true)) {\r\n        //         item.name = editObj.name;\r\n        //         item.lastName = editObj.lastName;\r\n        //         item.phone = editObj.phone;\r\n        //         item.email = editObj.email;\r\n        //         handleClear();\r\n        //         handleCloseEdit();\r\n        //         return editObj;\r\n        //     } else return item;\r\n        // })]);\r\n        history.push(\"/phone-book-list\")\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Modal show={show} onHide={handleCloseEdit}>\r\n                <Modal.Header >\r\n                    <Modal.Title>Edit contact</Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>\r\n                    <form onSubmit={handleSubmit} className=\"d-flex flex-column\">\r\n\r\n                        <label htmlFor=\"name\" className=\"mb-0 mt-0\">name:</label>\r\n                        <input type=\"text\" placeholder=\"Enter name\" name=\"name\" value={editObj.name} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.name}</span>}\r\n\r\n                        <label htmlFor=\"latName\" className=\"mb-0 mt-2\">latName:</label>\r\n                        <input type=\"text\" placeholder=\"Enter lastName\" name=\"lastName\" value={editObj.lastName} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.lastName}</span>}\r\n\r\n                        <label htmlFor=\"phone\" className=\"mb-0 mt-2\">phone:</label>\r\n                        <input type=\"phone\" placeholder=\"Enter phone\" name=\"phone\" value={editObj.phone} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.phone}</span>}\r\n\r\n                        <label htmlFor=\"email\" className=\"mb-0 mt-2\">email:</label>\r\n                        <input type=\"email\" placeholder=\"Enter email\" name=\"email\" value={editObj.email} onChange={handleChange} className=\"rounded border\" />\r\n                        {<span className=\"error\">{errorsEdit.email}</span>}\r\n\r\n                        <Modal.Footer>\r\n                            <Link to=\"/phone-book-list\">\r\n                                <Button variant=\"danger\" onClick={handleCloseEdit}>\r\n                                    Close\r\n                                </Button>\r\n                            </Link>\r\n                            <Button variant=\"secondary\" type=\"reset\" onClick={handleClear}>\r\n                                Clear\r\n                            </Button>\r\n                            <Button variant=\"success\" type=\"submit\">\r\n                                Save\r\n                            </Button>\r\n                        </Modal.Footer>\r\n                    </form>\r\n                </Modal.Body>\r\n            </Modal>\r\n        </>\r\n    );\r\n\r\n}\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts.contacts_list,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { editContact })(EditForm);\r\n","import React, { useState } from 'react';\r\nimport EditForm from '../Edit/EditForm';\r\nimport { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';\r\nimport { BrowserRouter as Router, Link } from 'react-router-dom'\r\n\r\n\r\nfunction Tr({ contacts, setContacts, item, deleteContact }) {\r\n\r\n    const [deleteModal, setDeleteModal] = useState(false);\r\n    const toggleDelete = () => setDeleteModal(!deleteModal);\r\n\r\n    const [show, setShow] = useState(false);\r\n    const [editObj, setEditObj] = useState({\r\n        name: \"\",\r\n        lastName: \"\",\r\n        phone: \"\",\r\n        email: \"\"\r\n    })\r\n    const handleDelete = (id) => {\r\n        // setContacts([...contacts.filter(item => item.id != id)])\r\n        deleteContact(id)\r\n    }\r\n\r\n    const handleCloseEdit = () => setShow(false);\r\n\r\n    const handleShowEdit = () => {\r\n        setShow(true);\r\n        handleEdit(item.id);\r\n    };\r\n    const handleEdit = (id) => {\r\n        const trContact = contacts.filter((contact) => contact.id == id);\r\n        setEditObj(trContact[0]);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <tr className=\"tr\">\r\n                <td>{item.id}</td>\r\n                <td>{item.name}</td>\r\n                <td>{item.lastName}</td>\r\n                <td>{item.phone}</td>\r\n                <td>{item.email}</td>\r\n                <td>\r\n                    <Modal isOpen={deleteModal} toggle={toggleDelete}>\r\n                        <ModalHeader className=\"bg-warning\" toggle={toggleDelete}>Delete Contact</ModalHeader>\r\n                        <ModalBody>\r\n                            Are you sure to delete this contact?\r\n                        </ModalBody>\r\n                        <ModalFooter>\r\n                            <Button color=\"danger\" onClick={() => handleDelete(item.id)}>Delete</Button>{' '}\r\n                            <Button color=\"secondary\" onClick={toggleDelete}>Cancel</Button>\r\n                        </ModalFooter>\r\n                    </Modal>\r\n                    <button onClick={toggleDelete} className=\"btn btn-danger mx-1\"><i className='fa fa-trash' /></button>\r\n                    <Router>\r\n                        <Link to=\"/phone-book-list/edit-contact\">\r\n                            <button onClick={() => handleShowEdit(item.id)} className=\"btn btn-primary mx-1\"><i className='fa fa-edit' /></button>\r\n                        </Link>\r\n                    </Router>\r\n\r\n                    <EditForm\r\n                        contacts={contacts}\r\n                        setContacts={setContacts}\r\n                        show={show}\r\n                        handleCloseEdit={handleCloseEdit}\r\n                        editObj={editObj}\r\n                        setEditObj={setEditObj}\r\n                    />\r\n                </td>\r\n            </tr>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Tr;","import React, { useState } from 'react';\r\nimport Search from '../Search/Search'\r\nimport Tr from '../Contacts/Tr';\r\nimport Editform from '../../views/Add/AddForm';\r\nimport '../Table/table.css';\r\nimport AddForm from '../../views/Add/AddForm';\r\nimport { connect } from 'react-redux';\r\nimport { deleteContact } from '../../Redux/Contacts/Contacts.Action';\r\n\r\n\r\nfunction Table({ contacts, deleteContact, addContact }) {\r\n\r\n    // const [contacts, setContacts] = useState([\r\n    //     { id: 1, name: \"ali\", lastName: \"komijani\", phone: \"09014356218\", email: \"ali@gmail.com\", action: \"\" },\r\n    //     { id: 2, name: \"mohammad\", lastName: \"khorrami\", phone: \"09114356218\", email: \"mohammad@gmail.com\", action: \"\" },\r\n    //     { id: 3, name: \"reza\", lastName: \"hatami\", phone: \"09124356218\", email: \"reza@gmail.com\", action: \"\" },\r\n    //     { id: 4, name: \"mahdi\", lastName: \"sadeghi\", phone: \"09134356218\", email: \"sadeghi@gmail.com\", action: \"\" },\r\n    //     { id: 5, name: \"hasan\", lastName: \"mohammadi\", phone: \"09224356218\", email: \"hasan@gmail.com\", action: \"\" },\r\n    //     { id: 6, name: \"amir\", lastName: \"sharifi\", phone: \"09354356218\", email: \"sharifi@gmail.com\", action: \"\" },\r\n    //     { id: 7, name: \"amirali\", lastName: \"ansari\", phone: \"09356356218\", email: \"ansari@gmail.com\", action: \"\" },\r\n    //     { id: 8, name: \"mehran\", lastName: \"mansoori\", phone: \"09164356218\", email: \"mehran@gmail.com\", action: \"\" },\r\n\r\n    // ]);\r\n    const [search, setSearch] = useState(\"\");\r\n\r\n    const chengeHandler = (e) => {\r\n        setSearch(e.target.value)\r\n    };\r\n\r\n    let newTr = contacts.filter(item => (\r\n        item.name.toLowerCase().startsWith(search.toLowerCase()) ||\r\n        item.phone.startsWith(search)\r\n    ));\r\n\r\n    return (\r\n        <>\r\n            <div className=\"tableContainer \">\r\n                <Search search={search} setSearch={setSearch} chengeHandler={chengeHandler}  />\r\n                <div className=\"table-content table-responsive\">\r\n                    <table className=\"table col-12 table-striped table-hover border\">\r\n                        <thead className=\"thead-dark\">\r\n                            <tr>\r\n                                <th>#</th>\r\n                                <th>name</th>\r\n                                <th>last name</th>\r\n                                <th>phone</th>\r\n                                <th>email</th>\r\n                                <th>action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {newTr.map((item) => (\r\n                                <Tr key={item.id} item={item} contacts={contacts} deleteContact={deleteContact} />\r\n                            ))}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        contacts: state.contacts.contacts_list,\r\n    }\r\n}\r\nexport default connect(mapStateToProps, { deleteContact })(Table);","import React, { useState } from 'react'\r\nimport Table from '../../Components/Table/Table'\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link\r\n  } from \"react-router-dom\";\r\n\r\n\r\nfunction Wellcome() {\r\n    const [show, setShow] = useState(true)\r\n    const handleShow = () => setShow(false);\r\n\r\n    return (\r\n        <div>\r\n            {\r\n                show ?\r\n                    <div className=\"d-flex align-items-center justify-content-center\" style={{ height: \"600px\" }}>\r\n                        <Link to=\"/phone-book-list\">\r\n                            <button onClick={() => handleShow()} className=\"btn btn-info\">Wellcome to my phone-book</button>\r\n                        </Link>\r\n                    </div>\r\n                    :\r\n                    <Table />\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wellcome\r\n","import React from 'react'\r\nimport Table from '../../Components/Table/Table';\r\n\r\n\r\nfunction PhoneBookList() {\r\n    return (\r\n        <Table/>\r\n    )\r\n}\r\n\r\nexport default PhoneBookList\r\n","import React from 'react'\r\nimport EditForm from '../../Components/Edit/EditForm';\r\n\r\n\r\nfunction EditContact() {\r\n    return (\r\n        <EditForm/>\r\n    )\r\n}\r\n\r\nexport default EditContact\r\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react'\nimport store, { persistor } from './Redux/store';\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n} from \"react-router-dom\";\nimport Wellcome from './views/Wellcome/Wellcome';\nimport PhoneBookList from './views/PhoneBookList/PhoneBookList';\nimport EditContact from './views/EditContact/EditContact'\nimport AddForm from './views/Add/AddForm';\n\nfunction App() {\n\n  return (\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <div className=\"App\">\n          <Router>\n            <Switch>\n              <Route exact path=\"/phone-book-list/add-contact\">\n                <AddForm />\n              </Route>\n              <Route exact path=\"/phone-book-list/edit-contact\" component={EditContact} />\n              <Route exact path=\"/phone-book-list\" component={PhoneBookList} />\n              <Route path=\"/\" component={Wellcome} />\n            </Switch>\n          </Router>\n        </div>\n      </PersistGate>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}